{
  "name": "adaptive-insights",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^2.26.0",
    "@typescript-eslint/parser": "^2.26.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-config-react-app": "^5.2.1",
    "eslint-plugin-flowtype": "^4.7.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-react": "^7.19.0",
    "eslint-plugin-react-hooks": "^2.5.1",
    "babel-eslint": "^10.0.3",
    "husky": "^4.2.3",
    "lerna": "^3.20.2",
    "openfin-cli": "^3.0.1",
    "prettier": "^2.0.2",
    "pretty-quick": "^2.0.1",
    "typescript": "^3.9.5"
  },
  "scripts": {
    "start": "npm run bootstrap && lerna run --parallel start -- --port 8080",
    "offline-start": "set INSIGHTS_OFFLINE=true && npm run start",
    "bootstrap": "lerna bootstrap",
    "clean": "npm install && lerna clean --yes",
    "test": "echo \"Error: no test specified\" && exit 1",
    "format": "prettier --write '{client,server}/**/*.{ts,tsx,json,gql,graphql}'",
    "format:check": "prettier --list-different '{client,server}/**/*.{ts,tsx,json,gql,graphql}'",
    "openfin": "openfin --launch --config ./client/app.json",
    "demo": "lerna run --parallel demo",
    "generate-server-schema": "node ./server/src/generateSchema.js",
    "generate-client-schema": "./client/node_modules/.bin/apollo client:download-schema ./client/src/schema.json",
    "generate-client-typings": "./client/node_modules/.bin/apollo client:codegen ./client/src/__generated__/types.ts --outputFlat --includes ./client/src/**/*.graphql --addTypename --localSchemaFile=./client/src/schema.json --target=typescript",
    "generate-schema-and-typings": "npm generate-server-schema && npm generate-client-schema && npm run generate-client-typings"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "openfin-fdc3": "^0.2.0"
  },
  "resolutions": {
    "graphql": "^14.5.8"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  }
}
